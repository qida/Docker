global
	user core
	group core
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private
	pidfile /var/run/haproxy.pid
	ssl-default-bind-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
	ssl-default-bind-options no-sslv3 no-tls-tickets
	ssl-default-server-ciphers ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS
	ssl-default-server-options no-sslv3 no-tls-tickets
	tune.ssl.default-dh-param 2048

defaults
	mode http
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http
	option forwardfor
	timeout client 50000
	timeout connect 5000
	timeout server 50000

frontend http
	bind :80
	acl letsencrypt path_beg /.well-known/acme-challenge/
    use_backend letsencrypt if letsencrypt
	redirect scheme https if !{ ssl_fc }

frontend https
	bind :443
    default_backend server

backend letsencrypt
    mode tcp
    server letsencrypt letsencrypt:80

backend server
	http-response set-header Strict-Transport-Security max-age=15768000
	{{range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" ","}}
	use_backend server_{{$host}} if { ssl_fc_sni {{$host}} }
	{{end}}

{{range $host, $containers := groupByMulti $ "Env.VIRTUAL_HOST" ","}}
backend server_{{$host}}
	{{range $index, $value := $containers}}
		{{$length := len $value.Addresses}}
		{{$network := index $value.Networks 0}}
		{{if eq $length 1}}
			{{with $address := index $value.Addresses 0}}
	server {{$network.IP}}:{{$address.Port}} {{$network.IP}}:{{$address.Port}} check
			{{end}}
		{{else if $value.Env.VIRTUAL_PORT}}
			{{range $i, $address := $value.Addresses}}
				{{if eq $address.Port $value.Env.VIRTUAL_PORT}}
	server {{$network.IP}}:{{$address.Port}} {{$network.IP}}:{{$address.Port}} check
				{{end}}
			{{end}}
		{{else}}
			{{range $i, $address := $value.Addresses}}
				{{if eq $address.Port "80"}}
	server {{$network.IP}}:{{$address.Port}} {{$network.IP}}:{{$address.Port}} check
				{{end}}
			{{end}}
		{{end}}
	{{end}}
{{end}}
